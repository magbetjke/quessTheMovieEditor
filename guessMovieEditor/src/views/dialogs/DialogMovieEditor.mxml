<?xml version="1.0"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:comps="comps.*"
                horizontalAlign="center"
                width="1000" height="700"
                title="Movie Editor">
    <mx:VBox horizontalAlign="center">
        <mx:HBox>
            <mx:VBox width="512"
                     horizontalAlign="left"
                     borderStyle="solid"
                     borderColor="0x808080"
                     horizontalScrollPolicy="off"
                     verticalScrollPolicy="off">
                <mx:Label text="Frame"/>
                <mx:Image id="movieImg" source="{_movieImg}" width="512" height="384"/>
                <mx:HBox horizontalGap="0" width="100%">
                    <mx:TextInput id="urlInput" width="300"/>
                    <mx:Button id="loadBtn" label="load" click="onLoadBtnClick(event)"/>
                    <mx:Spacer width="100%"/>
                    <mx:Button id="openBtn" label="browse" click="onBrowseButtonClick(event)" right="0"/>
                </mx:HBox>

                <mx:Label text="Title"/>
                <mx:VBox width="100%">
                    <comps:TextAreaWithLocale id="titleEN" loc="{Locales.EN}" width="100%"/>
                    <comps:TextAreaWithLocale id="titleRU" loc="{Locales.RU}" width="100%"/>
                </mx:VBox>
            </mx:VBox>
        </mx:HBox>
        <mx:HBox><mx:Button label="Save" click="onSave(event)"/><mx:Button label="Cancel" click="close()"/></mx:HBox>
    </mx:VBox>

    <mx:Script><![CDATA[
        import data.Locales;

        import models.Model;

        import models.Movie;

        import mx.controls.Alert;

        import mx.core.FlexGlobals;
        import mx.core.WindowedApplication;

        import mx.managers.PopUpManager;

        import utils.BitmapUtil;

        import utils.FileUtil;

        [Bindable]
        private var _movie:Movie;

        [Bindable]
        private var _movieImg:Bitmap;

        private function init(movie:Movie):void {
            _movie = movie;
        }

        public static function show(movie:Movie):DialogMovieEditor {
            var dialog:DialogMovieEditor = new DialogMovieEditor();
            dialog.init(movie);
            PopUpManager.addPopUp(dialog, WindowedApplication(FlexGlobals.topLevelApplication), true);
            PopUpManager.centerPopUp(dialog);
            return dialog;
        }

        private function close():void {
            PopUpManager.removePopUp(this);
        }

        private function onLoadBtnClick(event:MouseEvent):void {
            loadImage(urlInput.text);

        }

        private var loader:Loader;
        private var file:File;

        private function onBrowseButtonClick(event:MouseEvent):void {
            file = new File();
            var imagesFilter:FileFilter = new FileFilter("Images", "*.jpg;*.jpeg;*.gif;*.png");
            file.browseForOpen("Open file", [imagesFilter]);
            file.addEventListener(Event.SELECT, imgSelected);
        }


        private function imgSelected(event:Event):void {
            loadImage(file.url);
        }

        private function loadImage(url:String):void {
            loader = new Loader();
            var urlReq:URLRequest = new URLRequest(url);
            loader.contentLoaderInfo.addEventListener(Event.COMPLETE, imgLoaded);
            loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, onError);
            loader.contentLoaderInfo.addEventListener(SecurityErrorEvent.SECURITY_ERROR, onError);
            loader.load(urlReq);
        }

        private function onError(event:IOErrorEvent):void {
            Alert.show('wrong URL');
            disposeLoader();
        }


        private function imgLoaded(event:Event):void {
            _movieImg = loader.content as Bitmap;
            if (_movieImg.bitmapData.width < 768)Alert.show('Width of uploaded file must be >= 768!');
            disposeLoader();
        }

        private function disposeLoader():void {
            loader.contentLoaderInfo.removeEventListener(Event.COMPLETE, imgLoaded);
            loader.contentLoaderInfo.removeEventListener(IOErrorEvent.IO_ERROR, onError);
            loader.contentLoaderInfo.removeEventListener(SecurityErrorEvent.SECURITY_ERROR, onError);
            loader = null;
        }

        private function onSave(event:MouseEvent):void {
            if (!titleEN.text) {
                Alert.show('U should fill title');
                return;
            }
            var file:File = File.applicationStorageDirectory;
            var title:String = titleEN.text;
            var i:int = 0;

            do {
                file = file.resolvePath(Model.instance.originalImagesUrl + title + '.jpg');
                if (i > 0) title = title + '(' + i + ')';
                i++;
            } while (file.exists);
            var fileJXR:File = File.applicationStorageDirectory;
            fileJXR = fileJXR.resolvePath(Model.instance.movieFramesUrl + title + '.jpg');
            FileUtil.saveJPG(_movieImg.bitmapData, file);
            FileUtil.saveJPG(BitmapUtil.cropBitmapData(_movieImg.bitmapData, Model.FRAME_WIDTH, Model.FRAME_HEIGHT), fileJXR);
            _movie.imgUrl = title + '.jpg';
            _movie.imgBD = _movieImg.bitmapData;
            close();
        }
        ]]></mx:Script>
</mx:TitleWindow>
